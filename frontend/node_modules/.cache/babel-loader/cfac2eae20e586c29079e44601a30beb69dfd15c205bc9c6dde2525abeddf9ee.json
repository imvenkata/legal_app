{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Add CSRF token if needed\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response, async error => {\n  var _error$response, _error$response2, _error$response3, _error$response4;\n  const originalRequest = error.config;\n\n  // Handle 401 errors (unauthorized)\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    // Redirect to login page\n    window.location.href = '/login';\n    return Promise.reject(error);\n  }\n\n  // Handle 403 errors (forbidden)\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n    console.error('Access forbidden');\n    return Promise.reject(error);\n  }\n\n  // Handle 404 errors (not found)\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 404) {\n    console.error('Resource not found');\n    return Promise.reject(error);\n  }\n\n  // Handle 500 errors (server error)\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 500) {\n    console.error('Server error');\n    return Promise.reject(error);\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  getCurrentUser: () => api.get('/auth/me')\n};\nexport const documentsAPI = {\n  upload: file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/documents/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  getAll: () => api.get('/documents'),\n  getById: id => api.get(`/documents/${id}`),\n  delete: id => api.delete(`/documents/${id}`),\n  analyze: id => api.post(`/documents/${id}/analyze`)\n};\nexport const researchAPI = {\n  search: query => api.post('/research/search', {\n    query\n  }),\n  getHistory: () => api.get('/research/history'),\n  saveResearch: data => api.post('/research/save', data)\n};\nexport const contractsAPI = {\n  create: data => api.post('/contracts', data),\n  getAll: () => api.get('/contracts'),\n  getById: id => api.get(`/contracts/${id}`),\n  update: (id, data) => api.put(`/contracts/${id}`, data),\n  delete: id => api.delete(`/contracts/${id}`),\n  generate: data => api.post('/contracts/generate', data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","withCredentials","headers","interceptors","request","use","config","error","Promise","reject","response","_error$response","_error$response2","_error$response3","_error$response4","originalRequest","status","_retry","window","location","href","console","authAPI","login","credentials","post","register","userData","logout","getCurrentUser","get","documentsAPI","upload","file","formData","FormData","append","getAll","getById","id","delete","analyze","researchAPI","search","query","getHistory","saveResearch","data","contractsAPI","update","put","generate"],"sources":["/Users/venkata/startup/legal_app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    // Add CSRF token if needed\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    // Handle 401 errors (unauthorized)\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      // Redirect to login page\n      window.location.href = '/login';\n      return Promise.reject(error);\n    }\n\n    // Handle 403 errors (forbidden)\n    if (error.response?.status === 403) {\n      console.error('Access forbidden');\n      return Promise.reject(error);\n    }\n\n    // Handle 404 errors (not found)\n    if (error.response?.status === 404) {\n      console.error('Resource not found');\n      return Promise.reject(error);\n    }\n\n    // Handle 500 errors (server error)\n    if (error.response?.status === 500) {\n      console.error('Server error');\n      return Promise.reject(error);\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  getCurrentUser: () => api.get('/auth/me'),\n};\n\nexport const documentsAPI = {\n  upload: (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/documents/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n  getAll: () => api.get('/documents'),\n  getById: (id) => api.get(`/documents/${id}`),\n  delete: (id) => api.delete(`/documents/${id}`),\n  analyze: (id) => api.post(`/documents/${id}/analyze`),\n};\n\nexport const researchAPI = {\n  search: (query) => api.post('/research/search', { query }),\n  getHistory: () => api.get('/research/history'),\n  saveResearch: (data) => api.post('/research/save', data),\n};\n\nexport const contractsAPI = {\n  create: (data) => api.post('/contracts', data),\n  getAll: () => api.get('/contracts'),\n  getById: (id) => api.get(`/contracts/${id}`),\n  update: (id, data) => api.put(`/contracts/${id}`, data),\n  delete: (id) => api.delete(`/contracts/${id}`),\n  generate: (data) => api.post('/contracts/generate', data),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}